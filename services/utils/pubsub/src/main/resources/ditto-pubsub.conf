// TODO: move this somewhere under ditto
akka.cluster.distributed-data {
  ditto-replicator-facade {
    read-timeout = 5s
    write-timeout = 25s
  }
}

ditto {
  pubsub {
    // seed of hash functions; must be identical across the cluster for pub-sub to work.
    // rotate when paranoid about collision attacks.
    seed = """Two households, both alike in dignity,
In fair Verona, where we lay our scene,
From ancient grudge break to new mutiny,
Where civil blood makes civil hands unclean.
From forth the fatal loins of these two foes,
A pair of star-cross'd lovers take their life;
Whose misadventured piteous overthrows,
Doth with their death bury their parents' strife.
The fearful passage of their death-mark'd love,
And the continuance of their parents' rage,
Which, but their children's end, nought could remove,
Is now the two hours' traffic of our stage.
"""
    seed = ${?DITTO_PUBSUB_SEED}

    // how many hash functions to use for the Bloom filters.
    // expected false positive rate = 1/2^this_number
    // should be proportional to logarithm of cluster size.
    // should be identical across the cluster.
    hash-family-size = 10
    hash-family-size = ${?DITTO_PUBSUB_HASH_FAMILY_SIZE}

    // how long to wait before restarting actors executing pub-sub.
    restart-delay = 10s
    restart-delay = ${?DITTO_PUBSUB_RESTART_DELAY}

    // How often to flush local subscriptions to the distributed data replicator.
    update-interval = 3s
    update-interval = ${?DITTO_PUBSUB_UPDATE_INTERVAL}

    // about once every 5 minutes, push own Bloom filter into
    // the cluster no matter what, to recover from disassociation
    force-update-probability = 0.01
    force-update-probability = ${?DITTO_PUBSUB_FORCE_UPDATE_PROBABILITY}

    // How much empty space to reserve in the Bloom filters.
    // 1.0 = optimal size for the present number of subscriptions.
    buffer-factor = 1.0
    buffer-factor = ${?DITTO_PUBSUB_BUFFER_FACTOR}
  }
}
