get:
  summary: Retrieve the policy ID of a thing
  description: |-
    Returns the policy ID of the thing identified by the `thingId` path parameter.
  tags:
    - Things
  parameters:
    - $ref: '#/components/parameters/thingIdPathParam'
    - $ref: '#/components/parameters/ifMatchHeaderParamHash'
    - $ref: '#/components/parameters/ifNoneMatchHeaderParam'
    - $ref: '#/components/parameters/timeoutParam'
  responses:
    '200':
      description: The request successfully returned the policy ID.
      headers:
        ETag:
          description: |-
            The (current server-side) ETag for this (sub-)resource. For top-level resources it is in the format
            "rev:[revision]", for sub-resources it has the format "hash:[calculated-hash]".
          schema:
            type: string
      content:
        application/json:
          schema:
            type: string
    '304':
      $ref: '#/components/responses/notModified'
    '400':
      description: |-
        The request could not be completed. Possible reasons:
          * the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'
    '401':
      description: The request could not be completed due to missing authentication.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'
    '404':
      description: The request could not be completed. The thing with the given ID was not found in the context of the authenticated user.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'
    '412':
      $ref: '#/components/responses/preconditionFailed'
  put:
    summary: Create or update the policy ID of a thing
    description: |-
      Create or update the policy ID of the thing identified by the `thingId`
      path parameter.

      ### Create
      If the thing does not have a `policyId` yet, it is
      considered to have been created via API version 1, where the access control list `acl`
      mechanism is used. In that case, this request will create the `policyId`.

      Note: You will need to create the policy content separately.

      ### Update
      If the thing already has a `policyId` you can assign it to an existing policy by setting
      the new `policyId` in the request body.
    tags:
      - Things
    parameters:
      - $ref: '#/components/parameters/thingIdPathParam'
      - $ref: '#/components/parameters/ifMatchHeaderParamHash'
      - $ref: '#/components/parameters/ifNoneMatchHeaderParam'
      - $ref: '#/components/parameters/requestedAcksParam'
      - $ref: '#/components/parameters/timeoutParam'
      - $ref: '#/components/parameters/responseRequiredParam'
    responses:
      '201':
        description: |-
          The policy ID was successfully created. Note: You will need to create the policy content separately.
        headers:
          ETag:
            description: |-
              The (current server-side) ETag for this (sub-)resource. For top-level resources it is in the format
              "rev:[revision]", for sub-resources it has the format "hash:[calculated-hash]".
            schema:
              type: string
        content:
          application/json:
            schema:
              type: string
      '204':
        description: The policy ID was successfully updated.
        headers:
          ETag:
            description: |-
              The (current server-side) ETag for this (sub-)resource. For top-level resources it is in the format
              "rev:[revision]", for sub-resources it has the format "hash:[calculated-hash]".
            schema:
              type: string
      '400':
        description: |-
          The request could not be completed. Possible reasons:

            * the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id))
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvancedError'
      '401':
        description: The request could not be completed due to missing authentication.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvancedError'


      '404':
        description: |-
          The request could not be completed. The thing with the given ID was
          not found in the context of the authenticated user.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvancedError'
      '412':
        $ref: '#/components/responses/preconditionFailed'
      '413':
        $ref: '#/components/responses/entityTooLarge'
    requestBody:
      content:
        application/json:
          schema:
            type: string
            example: "\"your.namespace:your-policy-name\""
      description: |-
        The policy is used for controlling access to this thing. It is managed by
        resource `/policies/{policyId}`.

        The ID of a policy needs to conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
      required: true