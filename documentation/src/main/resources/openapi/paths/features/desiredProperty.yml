get:
  summary: Retrieve a specific desired property of a feature
  description: |-
    Returns the a specific desired property path of the feature identified by the `thingId` and
    `featureId` path parameter.

    The desired property (JSON) can be referenced
    hierarchically, by applying JSON Pointer notation (RFC-6901)

    ### Example
    To retrieve the value of the `brewingTemp` in the `water-tank` of our coffeemaker example the full path is:

    `/things/{thingId}/features/water-tank/desiredProperties/configuration/brewingTemp`
  tags:
    - Features
  parameters:
    - $ref: '#/components/parameters/thingIdPathParam'
    - $ref: '#/components/parameters/featureIdPathPathParam'
    - $ref: '#/components/parameters/desiredPropertyPathPathParam'
    - $ref: '#/components/parameters/ifMatchHeaderParamHash'
    - $ref: '#/components/parameters/ifNoneMatchHeaderParam'
    - $ref: '#/components/parameters/timeoutParam'
  responses:
    '200':
      description: The desired property was successfully retrieved.
      headers:
        ETag:
          description: |-
            The (current server-side) ETag for this (sub-)resource. For top-level resources it is in the format
            "rev:[revision]", for sub-resources it has the format "hash:[calculated-hash]".
          schema:
            type: string
    '304':
      $ref: '#/components/responses/notModified'
    '400':
      description: |-
        The request could not be completed. Possible reasons:
          * the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'
    '401':
      description: The request could not be completed due to missing authentication.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'

    '404':
      description: |-
        The request could not be completed. The specified desired property or the
        thing with the specified `thingId` or the feature with `featureId`
        was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'
    '412':
      $ref: '#/components/responses/preconditionFailed'
put:
  summary: Create or update a specific desired property of a feature
  description: |-
    Create or update a specific desired property of a feature identified by the
    `thingId` and `featureId` path parameter.

    The desired property will be created
    if it doesn't exist or else updated.

    The desired property (JSON) can be
    referenced hierarchically, by applying JSON Pointer notation (RFC-6901),

    ### Example
    To set the value of the brewingTemp in the water-tank of our coffeemaker example the full path is:

    `/things/{thingId}/features/water-tank/desiredProperties/configuration/brewingTemp`

  tags:
    - Features
  parameters:
    - $ref: '#/components/parameters/thingIdPathParam'
    - $ref: '#/components/parameters/featureIdPathPathParam'
    - $ref: '#/components/parameters/propertyPathPathParam'
    - $ref: '#/components/parameters/ifMatchHeaderParamHash'
    - $ref: '#/components/parameters/ifNoneMatchHeaderParam'
    - $ref: '#/components/parameters/requestedAcksParam'
    - $ref: '#/components/parameters/timeoutParam'
    - $ref: '#/components/parameters/responseRequiredParam'
  responses:
    '201':
      description: The desired property was successfully created.
      headers:
        ETag:
          description: |-
            The (current server-side) ETag for this (sub-)resource. For top-level resources it is in the format
            "rev:[revision]", for sub-resources it has the format "hash:[calculated-hash]".
          schema:
            type: string
    '204':
      description: The desired property was successfully updated.
      headers:
        ETag:
          description: |-
            The (current server-side) ETag for this (sub-)resource. For top-level resources it is in the format
            "rev:[revision]", for sub-resources it has the format "hash:[calculated-hash]".
          schema:
            type: string
    '400':
      description: |-
        The request could not be completed. Possible reasons:
          * the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
          * the JSON body is invalid

      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'
    '401':
      description: The request could not be completed due to missing authentication.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'

    '403':
      description: |-
        The request could not be completed. Possible reasons:

          * the caller has insufficient permissions.
            For creating/updating a desired property of an existing feature, `WRITE` permission is required.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'
    '404':
      description: |-
        The request could not be completed. The thing or the feature with
        the given ID was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'
    '412':
      $ref: '#/components/responses/preconditionFailed'
    '413':
      $ref: '#/components/responses/entityTooLarge'
  requestBody:
    $ref: '#/components/requestBodies/Value'
delete:
  summary: Delete a specific desired property of a feature
  description: |-
    Deletes a specific desired property of the feature identified by the `thingId`
    and `featureId` path parameter.

    The desired property (JSON) can be referenced
    hierarchically, by applying JSON Pointer notation (RFC-6901)

    ### Example
    To delete the value of the brewingTemp in the water-tank of our coffeemaker example the full path is:

    `/things/{thingId}/features/water-tank/desiredProperties/configuration/brewingTemp`
  tags:
    - Features
  parameters:
    - $ref: '#/components/parameters/thingIdPathParam'
    - $ref: '#/components/parameters/featureIdPathPathParam'
    - $ref: '#/components/parameters/propertyPathPathParam'
    - $ref: '#/components/parameters/ifMatchHeaderParamHash'
    - $ref: '#/components/parameters/ifNoneMatchHeaderParam'
    - $ref: '#/components/parameters/requestedAcksParam'
    - $ref: '#/components/parameters/timeoutParam'
    - $ref: '#/components/parameters/responseRequiredParam'
  responses:
    '204':
      description: The property was successfully deleted.
    '400':
      description: |-
        The request could not be completed. Possible reasons:
          * the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'
    '401':
      description: The request could not be completed due to missing authentication.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'

    '404':
      description: |-
        The request could not be completed. The specified desired property or the
        thing with the specified `thingId` or the feature with `featureId`
        was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'
    '412':
      $ref: '#/components/responses/preconditionFailed'