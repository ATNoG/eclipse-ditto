get:
  summary: Retrieve one specific Resource for a specific Label of a specific policy
  description: |-
    Returns the resource with path `resourcePath` of the policy identified
    by the `policyId` path parameter, and
    by the `label` path parameter.
  tags:
    - Policies
  parameters:
    - $ref: '#/components/parameters/policyIdPathParam'
    - $ref: '#/components/parameters/labelPathParam'
    - $ref: '#/components/parameters/resourcePathPathParam'
    - $ref: '#/components/parameters/ifMatchHeaderParamHash'
    - $ref: '#/components/parameters/ifNoneMatchHeaderParam'
    - $ref: '#/components/parameters/timeoutParam'
  responses:
    '200':
      description: |-
        The request successfully returned completed and returned is the
        Resource.
      headers:
        ETag:
          description: |-
            The (current server-side) ETag for this (sub-)resource. For top-level resources it is in the format
            "rev:[revision]", for sub-resources it has the format "hash:[calculated-hash]".
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceEntry'
    '304':
      $ref: '#/components/responses/notModified'
    '400':
      description: |-
        The request could not be completed. Possible reasons:

          * the `policyId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id))
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'
    '401':
      description: The request could not be completed due to missing authentication.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'

    '404':
      description: |-
        The request could not be completed. The policy with the given ID,
        the policy entry or the Resource was not found in the context of the
        authenticated user.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'
    '412':
      $ref: '#/components/responses/preconditionFailed'
put:
  summary: Create or modify one specific Resource for a specific Label of a specific policy
  description: |-
    Create or modify the Resource with path `resourcePath` of the policy
    entry identified by the `label` path parameter belonging to the policy
    identified by the `policyId` path parameter.
  tags:
    - Policies
  parameters:
    - $ref: '#/components/parameters/policyIdPathParam'
    - $ref: '#/components/parameters/labelPathParam'
    - $ref: '#/components/parameters/resourcePathPathParam'
    - $ref: '#/components/parameters/ifMatchHeaderParamHash'
    - $ref: '#/components/parameters/ifNoneMatchHeaderParam'
    - $ref: '#/components/parameters/timeoutParam'
    - $ref: '#/components/parameters/responseRequiredParam'
  responses:
    '201':
      description: The Resource was successfully created.
      headers:
        ETag:
          description: |-
            The (current server-side) ETag for this (sub-)resource. For top-level resources it is in the format
            "rev:[revision]", for sub-resources it has the format "hash:[calculated-hash]".
          schema:
            type: string
        Location:
          description: The location of the created Resource
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceEntry'
    '204':
      description: The Resource was successfully updated.
      headers:
        ETag:
          description: |-
            The (current server-side) ETag for this (sub-)resource. For top-level resources it is in the format
            "rev:[revision]", for sub-resources it has the format "hash:[calculated-hash]".
          schema:
            type: string
    '304':
      $ref: '#/components/responses/notModified'
    '400':
      description: |-
        The request could not be completed. Possible reasons:

         * the `policyId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id))
          * the JSON is invalid, or no valid Resource JSON object.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'
    '401':
      description: The request could not be completed due to missing authentication.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'

    '403':
      description: |-
        The request could not be completed. Possible reasons:

          * the caller has insufficient permissions.
            You need `WRITE` permission on the `policy:/entries/{label}/resources/{resourcePath}` resource,
            without any revoke in a deeper path of the policy resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'
    '404':
      description: |-
        The request could not be completed. The policy with the given ID or
        the policy entry was not found in the context of the authenticated
        user.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'
    '412':
      $ref: '#/components/responses/preconditionFailed'
    '413':
      $ref: '#/components/responses/entityTooLarge'
  requestBody:
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/ResourceEntry'
        example: {}
    description: JSON representation of the Resource
    required: true
delete:
  summary: Delete one specific Resource for a specific Label of a specific policy
  description: |-
    Deletes the resource with path `resourcePath` from the policy
    identified by the the `policyId` path parameter, and by the
    `label` path parameter.
  tags:
    - Policies
  parameters:
    - $ref: '#/components/parameters/policyIdPathParam'
    - $ref: '#/components/parameters/labelPathParam'
    - $ref: '#/components/parameters/resourcePathPathParam'
    - $ref: '#/components/parameters/ifMatchHeaderParamHash'
    - $ref: '#/components/parameters/ifNoneMatchHeaderParam'
    - $ref: '#/components/parameters/timeoutParam'
    - $ref: '#/components/parameters/responseRequiredParam'
  responses:
    '204':
      description: The Resource was successfully deleted.
    '400':
      description: |-
        The request could not be completed. Possible reasons:

          * the `policyId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id))
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'
    '401':
      description: The request could not be completed due to missing authentication.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'
    '403':
      description: |-
        The request could not be completed. Possible reasons:

          * the caller has insufficient permissions.
            You need `WRITE` permission on the `policy:/entries/{label}/resources/{resourcePath}` resource,
            without any revoke in a deeper path of the policy resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'
    '404':
      description: |-
        The request could not be completed. The policy with the given ID,
        the policy entry or the Resource was not found in the context of the
        authenticated user.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'
    '412':
      $ref: '#/components/responses/preconditionFailed'