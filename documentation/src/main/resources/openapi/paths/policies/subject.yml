get:
  summary: Retrieve one specific Subject for a specific Label of a specific policy
  description: |-
    Returns the subject with ID `subjectId` of the policy entry identified
    by the `policyId` path parameter, and by the `label` path parameter.
  tags:
    - Policies
  parameters:
    - $ref: '#/components/parameters/policyIdPathParam'
    - $ref: '#/components/parameters/labelPathParam'
    - $ref: '#/components/parameters/subjectIdPathParam'
    - $ref: '#/components/parameters/ifMatchHeaderParamHash'
    - $ref: '#/components/parameters/ifNoneMatchHeaderParam'
    - $ref: '#/components/parameters/timeoutParam'
  responses:
    '200':
      description: |-
        The request successfully returned completed and returned is the
        Subject.
      headers:
        ETag:
          description: |-
            The (current server-side) ETag for this (sub-)resource. For top-level resources it is in the format
            "rev:[revision]", for sub-resources it has the format "hash:[calculated-hash]".
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubjectEntry'
    '304':
      $ref: '#/components/responses/notModified'
    '400':
      description: |-
        The request could not be completed. Possible reasons:

          * the `policyId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id))
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'
    '401':
      description: The request could not be completed due to missing authentication.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'

    '404':
      description: |-
        The request could not be completed. The policy with the given ID,
        the policy entry or the Subject was not found in the context of the
        authenticated user.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvancedError'
    '412':
      $ref: '#/components/responses/preconditionFailed'
  put:
    summary: Create or modify one specific Subject for a specific Label of a specific policy
    description: |-
      Create or modify the subject with ID `subjectId` of the policy identified
      by the `policyId` path parameter, and
      by the `label` path parameter.
    tags:
      - Policies
    parameters:
      - $ref: '#/components/parameters/policyIdPathParam'
      - $ref: '#/components/parameters/labelPathParam'
      - $ref: '#/components/parameters/subjectIdPathParam'
      - $ref: '#/components/parameters/ifMatchHeaderParamHash'
      - $ref: '#/components/parameters/ifNoneMatchHeaderParam'
      - $ref: '#/components/parameters/timeoutParam'
      - $ref: '#/components/parameters/responseRequiredParam'
    responses:
      '201':
        description: The Subject was successfully created.
        headers:
          ETag:
            description: |-
              The (current server-side) ETag for this (sub-)resource. For top-level resources it is in the format
              "rev:[revision]", for sub-resources it has the format "hash:[calculated-hash]".
            schema:
              type: string
          Location:
            description: The location of the created Subject
            schema:
              type: string
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectEntry'
      '204':
        description: The Subject was successfully updated.
        headers:
          ETag:
            description: |-
              The (current server-side) ETag for this (sub-)resource. For top-level resources it is in the format
              "rev:[revision]", for sub-resources it has the format "hash:[calculated-hash]".
            schema:
              type: string
      '400':
        description: |-
          The request could not be completed. Possible reasons:

            * the `policyId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)))
          * the JSON body of the policy subject to be created/modified is invalid.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvancedError'
      '401':
        description: The request could not be completed due to missing authentication.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvancedError'

      '403':
        description: |-
          The request could not be completed. Possible reasons:

          * the caller has insufficient permissions.
            You need `WRITE` permission on the root `policy:/entries/{label}/subjects/{subjectId}` resource,
            without any revoke in a deeper path of the policy resource.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvancedError'
      '404':
        description: |-
          The request could not be completed. The policy with the given ID or
          the policy entry was not found in the context of the authenticated
          user.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvancedError'
      '412':
        $ref: '#/components/responses/preconditionFailed'
      '413':
        $ref: '#/components/responses/entityTooLarge'
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubjectEntry'
          example: {}
      description: JSON representation of the Subject
      required: true
  delete:
    summary: Delete one specific Subject for a specific Label of a specific policy
    description: |-
      Deletes the subject with ID `subjectId` from the policy identified
      by the `policyId` path parameter and
      by the `label` path parameter.

      Note: If the subject is used in other labels, it will not be deleted there,
      i.e. it will not lose those permissions, but only the permissions defined in the
      label specified at this path.
    tags:
      - Policies
    parameters:
      - $ref: '#/components/parameters/policyIdPathParam'
      - $ref: '#/components/parameters/labelPathParam'
      - $ref: '#/components/parameters/subjectIdPathParam'
      - $ref: '#/components/parameters/ifMatchHeaderParamHash'
      - $ref: '#/components/parameters/ifNoneMatchHeaderParam'
      - $ref: '#/components/parameters/timeoutParam'
      - $ref: '#/components/parameters/responseRequiredParam'
    responses:
      '204':
        description: The Subject was successfully deleted.
      '400':
        description: |-
          The request could not be completed. Possible reasons:

            * the `policyId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id))
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvancedError'
      '401':
        description: The request could not be completed due to missing authentication.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvancedError'
      '403':
        description: |-
          The request could not be completed. Possible reasons:

          * the caller has insufficient permissions.
            You need `WRITE` permission on the root `policy:/entries/{label}/subjects/{subjectId}` resource,
            without any revoke in a deeper path of the policy resource.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvancedError'
      '404':
        description: |-
          The request could not be completed. The policy with the given ID,
          the policy entry or the Subject was not found in the context of the
          authenticated user.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvancedError'
      '412':
        $ref: '#/components/responses/preconditionFailed'