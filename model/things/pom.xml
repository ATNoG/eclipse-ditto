<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2017 Contributors to the Eclipse Foundation
  ~
  ~ See the NOTICE file(s) distributed with this work for additional
  ~ information regarding copyright ownership.
  ~
  ~ This program and the accompanying materials are made available under the
  ~ terms of the Eclipse Public License 2.0 which is available at
  ~ http://www.eclipse.org/legal/epl-2.0
  ~
  ~ SPDX-License-Identifier: EPL-2.0
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.eclipse.ditto</groupId>
        <artifactId>ditto-model</artifactId>
        <version>${revision}</version>
    </parent>

    <artifactId>ditto-model-things</artifactId>
    <packaging>bundle</packaging>
    <name>Eclipse Ditto :: Model :: Things</name>

    <dependencies>
        <!-- ### Compile ### -->
        <dependency>
            <groupId>org.eclipse.ditto</groupId>
            <artifactId>ditto-model-base</artifactId>
        </dependency>

        <!-- ### Testing ### -->
        <dependency>
            <groupId>org.eclipse.ditto</groupId>
            <artifactId>ditto-model-base</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>org/eclipse/ditto/model/things/assertions/*</include>
                                <include>org/eclipse/ditto/model/things/TestConstants*</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Import-Package>
                            !org.eclipse.ditto.utils.jsr305.annotations,
                            org.eclipse.ditto.*
                        </Import-Package>
                        <Export-Package>
                            org.eclipse.ditto.model.things.*
                        </Export-Package>
                    </instructions>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.github.siom79.japicmp</groupId>
                <artifactId>japicmp-maven-plugin</artifactId>
                <configuration>
                    <parameter>
                        <excludes>
                            <exclude>org.eclipse.ditto.model.things.ThingIdValidator</exclude>
                            <exclude>org.eclipse.ditto.model.things.ThingPolicyIdValidator</exclude>
                            <exclude>org.eclipse.ditto.model.things.ThingBuilder$FromScratch#setId(org.eclipse.ditto.model.things.ThingId)</exclude>
                            <exclude>org.eclipse.ditto.model.things.ThingBuilder$FromScratch#setPolicyId(org.eclipse.ditto.model.things.ThingPolicyId)</exclude>
                            <exclude>org.eclipse.ditto.model.things.ThingBuilder$FromCopy#setId(java.util.function.Predicate,org.eclipse.ditto.model.things.ThingId)</exclude>
                            <exclude>org.eclipse.ditto.model.things.ThingBuilder$FromCopy#setId(org.eclipse.ditto.model.things.ThingId)</exclude>
                            <exclude>org.eclipse.ditto.model.things.ThingBuilder$FromCopy#setPolicyId(org.eclipse.ditto.model.things.ThingPolicyId)</exclude>
                            <exclude>org.eclipse.ditto.model.things.ThingBuilder#generateRandomTypedThingId()</exclude>
                            <exclude>org.eclipse.ditto.model.things.Thing#getEntityId()</exclude>
                            <exclude>org.eclipse.ditto.model.things.Thing#getPolicyEntityId()</exclude>
                            <exclude>org.eclipse.ditto.model.things.Thing#setPolicyId(org.eclipse.ditto.model.things.ThingPolicyId)</exclude>
                            <exclude>org.eclipse.ditto.model.things.PolicyIdMissingException#fromThingIdOnUpdate(java.lang.String,org.eclipse.ditto.model.base.headers.DittoHeaders)</exclude>
                            <exclude>org.eclipse.ditto.model.things.PolicyIdMissingException#fromThingIdOnCreate(java.lang.String,org.eclipse.ditto.model.base.headers.DittoHeaders)</exclude>
                            <exclude>org.eclipse.ditto.model.things.AclNotAllowedException#newBuilder(java.lang.String)</exclude>
                            <exclude>org.eclipse.ditto.model.things.AclInvalidException#newBuilder(java.lang.String)</exclude>
                        </excludes>
                    </parameter>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>produce-json-examples</id>
                        <configuration>
                            <mainClass>org.eclipse.ditto.model.things.examplejson.ThingModelJsonExamplesProducer
                            </mainClass>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
